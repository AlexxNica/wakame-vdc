#!/usr/bin/make -f

# should be in wakame-vdc
CURDIR ?= $(PWD)

RPM_BUILD_ROOT ?= $(CURDIR)/rpmbuild/wakame-vdc
RPMBUILD_CMD  := rpmbuild
RPMBUILD_SPEC := rpmbuild/SPECS/wakame-vdc.spec
RPMBUILD_OPTS := --target=`arch`

# .deb
#TMP_INSTALL_ROOT ?= debian/wakame-vdc
# .rpm
TMP_INSTALL_ROOT ?=

VDC_INSTALL_ROOT ?= /opt/axsh/wakame-vdc

build: build-stamp

build-stamp:
	# dh_testdir
	CURDIR=${CURDIR} make build
	touch $@
clean:
	CURDIR=${CURDIR} make clean
	$(RPMBUILD_CMD) --clean $(RPMBUILD_OPTS) $(RPMBUILD_SPEC)
	rm -f build-stamp

install: build
	# force to rewrite path info in text files.
	fgrep -m 1 -r $(CURDIR) $(CURDIR)/$(TMP_INSTALL_ROOT) | \
	  grep -v '^Binary file' | \
	  awk -F: '{print $$1}' | \
	  while read -r i; do \
	    echo $$i; \
	    cp -p $$i $$i.sed ;\
	    sed -e 's|$(CURDIR)|$(VDC_INSTALL_ROOT)|g' < $$i > $$i.sed ;\
	    mv $$i.sed $$i ;\
	  done
	# clean conf files from base package
	rm -f $(CURDIR)/$(TMP_INSTALL_ROOT)/$(VDC_INSTALL_ROOT)/dcmgr/config/*.conf
	rm -f $(CURDIR)/$(TMP_INSTALL_ROOT)/$(VDC_INSTALL_ROOT)/dcmgr/config/*.yml
	rm -f $(CURDIR)/$(TMP_INSTALL_ROOT)/$(VDC_INSTALL_ROOT)/frontend/dcmgr_gui/config/*.yml

	# replace /usr/bin/ruby shebangs.
	# unicorn shebang: /this/will/be/overwritten/or/wrapped/anyways/do/not/worry/ruby
	# statemachine: /opt/local/bin/ruby
	egrep -m 1 -r '^#!.*/ruby'  $(CURDIR) | \
	  grep -v '^Binary file' | \
	  awk -F: '{print $$1}' | \
	  while read -r i; do \
	    echo $$i; \
	    cp -p $$i $$i.sed ;\
	    sed -e 's|^#!.*/ruby|#!$(VDC_INSTALL_ROOT)/ruby/bin/ruby|g' < $$i > $$i.sed ;\
	    mv $$i.sed $$i ;\
	  done
	# replace "/usr/bin/env ruby" shebangs.
	egrep -m 1 -r '^#!/usr/bin/env ruby'  $(CURDIR) | \
	  grep -v '^Binary file' | \
	  awk -F: '{print $$1}' | \
	  while read -r i; do \
	    echo $$i; \
	    cp -p $$i $$i.sed ;\
	    sed -e 's|^#!/usr/bin/env ruby|#!$(VDC_INSTALL_ROOT)/ruby/bin/ruby|g' < $$i > $$i.sed ;\
	    mv $$i.sed $$i ;\
	  done

binary-indep: build install

binary-arch: build install
	# overwrite RPATH in binaries.
	# chrpath exits non-zero value if fails to replace RPATH. it can be ignored.
	find $(CURDIR)/$(TMP_INSTALL_ROOT)/ -type f -name "*.so" | \
	  while read -r i; do \
	    (file -b "$$i" | grep -q '^ELF ' > /dev/null) && chrpath --replace $(VDC_INSTALL_ROOT)/ruby/lib "$$i" || : ;\
	  done

binary:
	$(RPMBUILD_CMD) -bb $(RPMBUILD_OPTS) $(RPMBUILD_SPEC)

binary-snap:
	$(RPMBUILD_CMD) -bb $(RPMBUILD_OPTS) $(RPMBUILD_SPEC) --define "build_id $$(rpmbuild/helpers/gen-release-id.sh)"

.PHONY: build clean binary-indep binary-arch binary binary-snap install
