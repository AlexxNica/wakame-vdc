# -*-Shell-script-*-
#
#
#

MUSSEL_PROMPT='$'
MUSSEL_ARGS=

# | grep ')$' | grep -v '^ ' | sed 's,),,' | sed 's,|,\n,g' | grep -v '*' | sort | sed 's,^, ,'
MUSSEL_RESOURCES=

function extract_args() {
  MUSSEL_ARGS=
  local arg= key= value=
  while [[ $# != 0 ]]; do
    arg="$1" key= value=
    case "${arg}" in
    --*=*)
      key=${arg%%=*}; key=${key##--}; key=${key//-/_}
      value="${value} ${arg##--*=}"
      eval "${key}=\"${value}\""; value="\${${key}}"; value=$(eval echo ${value}); eval "${key}=\"${value## }\""
      ;;
    --*)
      key=${arg##--}; key=${key//-/_}
      case "$2" in
      --*|"")
        eval "${key}=1"
        ;;
      *)
        value="\${${key}} $2"
        eval "${key}=\"${value}\""; value="\${${key}}"; value=$(eval echo ${value}); eval "${key}=\"${value## }\""
        shift
        ;;
      esac
      ;;
    *)
      MUSSEL_ARGS="${MUSSEL_ARGS} ${arg}"
      ;;
    esac
    shift
  done
  # trim
  MUSSEL_ARGS=${MUSSEL_ARGS%% }
  MUSSEL_ARGS=${MUSSEL_ARGS## }
}

function shlog() {
  loglevel=$(echo ${loglevel:-info} | tr A-Z a-z)
  dry_run=$(echo ${dry_run:-} | tr A-Z a-z)

  case "${loglevel}" in
  debug)
    echo "${MUSSEL_PROMPT} $*"
    ;;
  *)
    ;;
  esac

  case "${dry_run}" in
  y|yes|on)
    :
   ;;
  *)
    eval $*
    ;;
  esac
}

function call_api() {
  shlog curl -fsSkL -H ${http_header} $*
}

function cmd_index() {
  call_api -X GET "${base_uri}/${1}s.${format}?${xquery}"
}

function cmd_show() {
  [ -z "${3}" ] && { echo "${1} ${2} ID" >&2; return 1; }
  call_api -X GET ${base_uri}/${1}s/${3}.${format}
}

function cmd_xget() {
  call_api -X GET ${base_uri}/${1}s/${3}/${2}.${format}
}

function cmd_xcreate() {
  call_api -X POST \
   ${MUSSEL_CUSTOM_DATA} \
   ${base_uri}/${1}s.${format}
}

function cmd_destroy() {
  [ -z "${3}" ] && { echo "${1} ${2} ID" >&2; return 1; }
  call_api -X DELETE \
   ${base_uri}/${1}s/${3}.${format}
}

function cmd_help() {
  echo "$0 ${1} [help|${2}]" >&2
}

function cmd_default() {
  [ $# = 1 ] && cmd_index $* || $0 ${1} help
}

function run_cmd() {
  :
}
