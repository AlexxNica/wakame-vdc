# -*-Shell-script-*-
#
# 12.03
#

MUSSEL_RESOURCES="
 backup_object
 host_node
 image
 instance
 load_balancer
 network
 security_group
 ssh_key_pair
 storage_node
"

function run_cmd() {
local namespace=$1 cmd=$2

case "${namespace}" in

instance)
  case "${cmd}" in
  help)    cmd_help    ${namespace} "index|show|create|xcreate|destroy|reboot|stop|start|poweroff|poweron" ;;
  index)
    # --state=(running|stopped|terminated|alive)
    xquery="service_type=std"
    if [[ -n "${state}" ]]; then
      xquery="${xquery}\&state=${state}"
    fi
    cmd_index $*
    ;;
  show)    cmd_show    $* ;;
  destroy) cmd_destroy $* ;;
  create)
    #
    image_id=${image_id:-wmi-lucid5}
    instance_spec_name=${instance_spec_name:-is-small}
    security_groups=${security_groups:-sg-demofgr}
    ssh_key_id=${ssh_key_id:-ssh-demo}
    hypervisor=${hypervisor:-openvz}
    cpu_cores=${cpu_cores:-1}
    memory_size=${memory_size:-1024}
    vifs=${vifs:-\{\}}
    #
    display_name=${display_name:-}
    host_name=${host_name:-}

    call_api -X POST \
     --data-urlencode "image_id=${image_id}" \
     --data-urlencode "instance_spec_name=${instance_spec_name}"  \
     --data-urlencode "security_groups[]=${security_groups}" \
     --data-urlencode "ssh_key_id=${ssh_key_id}" \
     --data-urlencode "hypervisor=${hypervisor}" \
     --data-urlencode "cpu_cores=${cpu_cores}" \
     --data-urlencode "memory_size=${memory_size}" \
     --data-urlencode "display_name=${display_name}" \
     --data-urlencode "host_name=${host_name}" \
     --data-urlencode "vifs=${vifs}" \
     ${base_uri}/${namespace}s.${format}
    ;;
  xcreate) cmd_xcreate ${namespace} ;;
  backup)
    uuid=$3
    #
    is_public=${is_public:-false}
    is_cacheable=${is_cacheable:-false}
    #
    description=${description:-}

    call_api -X PUT \
     -d "description=${description}" \
     -d "display_name=${display_name}" \
     -d "is_public=${is_public}" \
     -d "is_cacheable=${is_cacheable}" \
     ${base_uri}/${namespace}s/${uuid}/${cmd}.${format}
    ;;
  reboot|stop|start|poweroff|poweron)
    uuid=$3
    call_api -X PUT -d "''" \
     ${base_uri}/${namespace}s/${uuid}/${cmd}.${format}
    ;;
  *)       cmd_default $* ;;
  esac
  ;;

load_balancer)
  case "${cmd}" in
  help)    cmd_help    ${namespace} "index|show|create|xcreate|destroy|poweroff|poweron" ;;
  index)
    # --state=(running|stopped|terminated|alive)
    if [[ -n "${state}" ]]; then
      xquery="state=${state}"
    fi
    cmd_index $*
    ;;
  show)    cmd_show    $* ;;
  destroy) cmd_destroy $* ;;
  create)
    #
    protocol=${protocol:-http}
    balancer_port=${balancer_port:-80}
    instance_port=${instance_port:-80}
    balance_algorithm=${balance_algorithm:-leastconn}
    max_connection=${max_connection:-1000}
    #
    display_name=${display_name:-}
    cookie_name=${cookie_name:-}
    private_key=${private_key:-}
    public_key=${public_key:-}

    call_api -X POST \
     --data-urlencode "display_name=${display_name}" \
     --data-urlencode "protocol=${protocol}" \
     --data-urlencode "port=${balancer_port}" \
     --data-urlencode "instance_port=${instance_port}" \
     --data-urlencode "balance_algorithm=${balance_algorithm}" \
     --data-urlencode "engine=haproxy" \
     --data-urlencode "cookie_name=${cookie_name}" \
     --data-urlencode "private_key=${private_key}" \
     --data-urlencode "public_key=${public_key}" \
     --data-urlencode "engine=haproxy" \
     --data-urlencode "max_connection=${max_connection}" \
     ${base_uri}/${1}s.${format}
    ;;
  xcreate) cmd_xcreate ${namespace} ;;
  poweroff|poweron)
    uuid=$3
    call_api -X PUT -d "''" \
     ${base_uri}/${namespace}s/${uuid}/${cmd}.${format}
    ;;
  *)       cmd_default $* ;;
  esac
  ;;
image|backup_object)
  case "${cmd}" in
  help)    cmd_help    ${namespace} "index|show|xcreate|destroy" ;;
  index)   cmd_index   $* ;;
  show)    cmd_show    $* ;;
  destroy) cmd_destroy $* ;;
  xcreate) cmd_xcreate ${namespace} ;;
  *)       cmd_default $* ;;
  esac
  ;;
host_node|storage_node|network|security_group|ssh_key_pair)
  case "${cmd}" in
  help)    cmd_help    ${namespace} "index|show|xcreate" ;;
  index)   cmd_index   $* ;;
  show)    cmd_show    $* ;;
  xcreate) cmd_xcreate ${1} ;;
  *)       cmd_default $* ;;
  esac
  ;;

*)
  echo "$0 [namespace] [cmd]" >&2
  return 1
  ;;

esac
}
