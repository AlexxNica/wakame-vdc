#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

load File.expand_path('../../config/boot.rb', __FILE__)

require 'thor'
require 'thor/group'
require 'erb'

module Cli
  require 'cli/errors'

  autoload :Base, 'cli/base'
  autoload :AccountCli, 'cli/account'
  autoload :UserCli, 'cli/user'
  autoload :Error, 'cli/errors'
end

class RootCli < Thor
  register(Cli::AccountCli, Cli::AccountCli.namespace, "account sub-command", "Operations for accounts")
  register(Cli::UserCli, Cli::UserCli.namespace, "user sub-command", "Operations for users")
end

require File.expand_path('../../config/initializers/sequel', __FILE__)
# load model classes under app/models.
require 'autoload'

begin
  RootCli.start
rescue => e
  e = Cli::Error.new(e,101) unless e.is_a?(Cli::Error)
  STDERR.puts "ERROR: " + e.message
  if e.respond_to?(:exit_code)
    exit(e.exit_code)
  else
    exit(1)
  end
end
