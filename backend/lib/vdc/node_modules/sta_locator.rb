# -*- coding: utf-8 -*-
require 'isono'

module Vdc
  module NodeModules
    class StaLocator < Isono::NodeModules::Base
      
      initialize_hook do
      end

      terminate_hook do
      end

      def status_changed(data)
        data = Serializer.instance.unmarshal(data)
        DataStore.pass{
          v = Dcmgr::Models::Volume[data[:uuid]]
          v.updated_at = Time.now
          sm = v.state_machine
          case data[:state]
          when 3
            sm.on_attach
          when 4
            sm.on_fail
          when 8, 9
            sm.on_delete
          else
            sm.on_create
            v.export_path = data[:export_path] if data[:export_path]
            v.transport_information = data[:transport_information] if data[:transport_information]
          end
          v.save_changes
        }
      end
    end
  end
end
