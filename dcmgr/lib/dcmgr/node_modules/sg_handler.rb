# -*- coding: utf-8 -*-

module Dcmgr::NodeModules
  class SGHandler < Isono::NodeModules::Base
    include Dcmgr::Logger
    include Dcmgr::VNet::SGHandler

    initialize_hook do
      app = Isono::Rack::ObjectMethod.new(myinstance)
      job = Isono::NodeModules::JobChannel.new(node)
      job.register_endpoint('sg_handler', Isono::Rack.build do
        use Isono::Rack::Sequel
        run proc { |req, res|
          Thread.current[M::BaseNew::LOCK_TABLES_KEY] = {}
          app.call(req, res)
        }
      end)
    end

    def call_packetfilter_service(host_node,method,*args)
      event.publish("#{host_node[:node_id]}-#{method}",:args => args)
    end

    def event
      @event ||= Isono::NodeModules::EventChannel.new(@node)
    end

  end
end
