# -*- coding: utf-8 -*-

module Dcmgr::NodeModules

  class DebugOpenFlow < Isono::NodeModules::Base
    include Isono::NodeModules
    include Dcmgr::Logger

    initialize_hook do
      myinstance.event.subscribe('broadcast/debug/vnet', '#') do |args|
        next if myinstance.controller.nil?
        myinstance.method(args[0]).call(args)
      end
    end

    terminate_hook do
    end

    def switch_info(args)
      result = { :type => 'openflow' }
      event.publish('gather/debug/vnet', { :sender => args[1], :args => [args[0], node.node_id, result] })
    end

    def event
      @event ||= Isono::NodeModules::EventChannel.new(@node)
    end

    def controller
      @@controller
    end

    def self.register_controller(controller)
      @@controller = controller
    end
  end
end
