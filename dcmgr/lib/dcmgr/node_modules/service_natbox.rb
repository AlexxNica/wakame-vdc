# -*- coding: utf-8 -*-

require 'fileutils'
require 'isono'
require 'ipaddress'

module Dcmgr::NodeModules

  class ServiceNatBox < Isono::NodeModules::Base
    include Dcmgr::Logger

    initialize_hook do
      logger.info "Initializing NatBox."

      myinstance.worker_thread.pass {
        logger.info "Initializing NatBox worker_thread."

        myinstance.event.subscribe("vnet/foo", '#') { |header, body|
        }
      }
    end

    terminate_hook do
      logger.info "Terminating NatBox."
    end

    def event
      raise "Only ServiceOpenflow::worker_threads can access this event channel." unless worker_thread.member_thread?
      @event ||= Isono::NodeModules::EventChannel.new(@node)
    end

    def rpc
      @rpc ||= Isono::NodeModules::RpcChannel.new(@node)
    end

    def worker_thread
      @worker_thread ||= Isono::ThreadPool.new(1, 'NatBox')
    end

  end

end
