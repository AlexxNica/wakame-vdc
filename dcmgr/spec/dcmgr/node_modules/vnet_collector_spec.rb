# -*- coding: utf-8 -*-

require 'spec_helper'
require 'isono'
require 'webmock/rspec'

include WebMock::API

describe "vnet_collector" do

  let(:vnic_params) do
    {
      :test => "aaaa"
    }
  end

  let(:vnet_collector) { Dcmgr::NodeModules::VnetCollector }

  let(:value_object) do
    double("value_object").tap do |v|
      v.should_receive(:copy_instance_variables).with( an_instance_of(Dcmgr::NodeModules::VnetCollector) ).and_return(true)
    end
  end

  let(:isono_node_mock) do
    double("isono_node").tap do |i|
      i.should_receive(:is_a?).and_return(Isono::Node)
      i.should_receive(:value_objects).twice.and_return({vnet_collector => value_object})
    end
  end

  let(:instance) { Fabricate(:instance_with_network_vif) }

  subject { vnet_collector.new(isono_node_mock) }

  it "receives network_vif params" do
    ret = subject.test_method(vnic_params)
    expect(ret).to eq true
  end
end
